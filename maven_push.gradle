apply plugin: 'maven'
apply plugin: 'signing'

def isReleaseBuild() {
    System.out.println(version)
    return version.contains("SNAPSHOT") == false
}

def sonatypeRepositoryUrl
if (isReleaseBuild()) {
    println 'RELEASE BUILD'
    sonatypeRepositoryUrl = "http://repo.dlabs.si:8081/artifactory/simple/libs-release-local/"
} else {
    println 'DEBUG BUILD'
    sonatypeRepositoryUrl = "http://repo.dlabs.si:8081/artifactory/simple/libs-snapshot-local/"
}

afterEvaluate { project ->
    uploadArchives {

        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.artifactId = POM_NAME


                repository(url: sonatypeRepositoryUrl) {
                    authentication(
                            userName: dlabsRepoUsername,
                            password: dlabsRepoPassword
                    )
                }

                pom.project {
                    name POM_NAME
                    packaging POM_PACKAGING
                    description POM_DESCRIPTION
                    url POM_URL

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                        developerConnection POM_SCM_DEV_CONNECTION
                    }

                    organization {
                        name "DLabs d.o.o."
                        url "http://dlabs.si"
                    }

                    developers {
                        developer {
                            id "dejandobnikar"
                            name "Dejan Dobnikar"
                            email "dejan.dobnikar@dlabs.si"
                            organization "DLabs d.o.o."
                            organizationUrl = "http://dlabs.si"
                        }
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java
    }

    task androidJavadocsJar(type: Jar) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}
